{"version":3,"sources":["utils/httpClients.ts","types/filterParams.ts","components/Store/Store.tsx","utils/todos.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","services/getfilteredTodos.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","utils/users.ts","App.tsx","index.tsx"],"names":["getData","url","fetch","then","response","ok","Error","status","statusText","json","FilterParams","TodosContext","React","createContext","todos","loading","filteredTodos","setFilteredTodos","selectedTodo","setSelectedTodo","TodosProvider","children","useState","setTodos","setLoading","useEffect","catch","finally","value","useMemo","Provider","TodoItem","todo","useContext","id","title","completed","console","log","className","cn","type","onClick","TodoList","map","TodoFilter","setTitle","All","filter","setFilter","filterParams","Active","Completed","toLowerCase","includes","getFilteredTodos","onChange","e","target","placeholder","event","style","pointerEvents","Loader","TodoModal","userId","user","setUser","loadingUser","setLoadingUser","setTimeout","getUser","userData","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"sPAGO,SAASA,EAAWC,GACzB,OAAOC,MAHQ,iEAGSD,GACrBE,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,YAAgCH,EAASI,aAGjD,OAAOJ,EAASK,U,ICVVC,E,OCiBCC,EAAeC,IAAMC,cAAgC,CAChEC,MAAO,GACPC,SAAS,EACTC,cAAe,GACfC,iBAAkB,aAClBC,aAAc,KACdC,gBAAiB,eAGNC,EAAiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/C,EAA0BC,mBAAiB,IAA3C,mBAAOR,EAAP,KAAcS,EAAd,KACA,EAA0CD,mBAAiB,IAA3D,mBAAON,EAAP,KAAsBC,EAAtB,KACA,EAA8BK,oBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAwCF,mBAAsB,MAA9D,mBAAOJ,EAAP,KAAqBC,EAArB,KAEAM,qBAAU,WACRD,GAAW,GC3BNxB,EAHS,eDiCXG,KAAKoB,GACLG,OAAM,eACNC,SAAQ,WACPH,GAAW,QAEd,IAEHC,qBAAU,WACRR,EAAiBH,KAChB,CAACA,IAEJ,IAAMc,EAAQC,mBAAQ,iBAAO,CAC3Bf,QACAC,UACAC,gBACAC,mBACAC,eACAC,qBAEE,CAACL,EAAOC,EAASC,EAAeE,IAEpC,OACE,cAACP,EAAamB,SAAd,CAAuBF,MAAOA,EAA9B,SACGP,KElDMU,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,EAA0CC,qBAAWtB,GAA7CO,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAEde,EAAyBF,EAAzBE,GAAIC,EAAqBH,EAArBG,MAAOC,EAAcJ,EAAdI,UAKnB,OAFAC,QAAQC,IAAI,YAGV,qBACE,UAAQ,OACRC,UAAWC,IACT,CAAE,6BAAyC,OAAZtB,QAAY,IAAZA,OAAA,EAAAA,EAAcgB,OAAd,OAAqBF,QAArB,IAAqBA,OAArB,EAAqBA,EAAME,MAH9D,UAME,oBAAIK,UAAU,eAAd,SACGL,IAGH,oBAAIK,UAAU,eAAd,SACGH,GACC,sBAAMG,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWC,IACZ,CAAE,mBAAoBJ,EAAW,mBAAoBA,IADvD,SAIGD,MAIL,oBAAII,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVE,KAAK,SACLC,QAAS,kBAAMvB,EAAgBa,IAJjC,SAME,sBAAMO,UAAU,OAAhB,SACE,mBAAGA,UAAWC,IAAG,MACf,CACE,gBAA4B,OAAZtB,QAAY,IAAZA,OAAA,EAAAA,EAAcgB,OAAd,OAAqBF,QAArB,IAAqBA,OAArB,EAAqBA,EAAME,IAC3C,UAAsB,OAAZhB,QAAY,IAAZA,OAAA,EAAAA,EAAcgB,OAAd,OAAqBF,QAArB,IAAqBA,OAArB,EAAqBA,EAAME,kBChDxCS,EAA4B,SAAC,GAAuB,IAArB3B,EAAoB,EAApBA,cAI1C,OAFAqB,QAAQC,IAAI,YAGV,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGvB,EAAc4B,KAAI,SAAAZ,GAAI,OACrB,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKE,c,SJ9BVxB,K,UAAAA,E,gBAAAA,E,uBAAAA,M,gBKML,IAAMmC,EAAa,WACxB,MAGIZ,qBAAWtB,GAFbG,EADF,EACEA,MACAG,EAFF,EAEEA,iBAGF,EAA0BK,mBAAS,IAAnC,mBAAOa,EAAP,KAAcW,EAAd,KACA,EAA4BxB,mBAASZ,EAAaqC,KAAlD,mBAAOC,EAAP,KAAeC,EAAf,KAEMjC,ECZD,SACLF,EACAoC,EACAf,GAEA,IAAInB,EAAa,YAAOF,GAuBxB,OArBIoC,IAAiBxC,EAAaqC,MAChC/B,EAAgBA,EAAcgC,QAAO,SAAAhB,GACnC,OAAQkB,GACN,KAAKxC,EAAayC,OAChB,OAAQnB,EAAKI,UAEf,KAAK1B,EAAa0C,UAChB,OAAOpB,EAAKI,UAEd,QACE,OAAOJ,OAKXG,IACFnB,EAAgBA,EAAcgC,QAC5B,SAAAhB,GAAI,OAAIA,EAAKG,MAAMkB,cAAcC,SAASnB,OAIvCnB,EDhBeuC,CAAiBzC,EAAOkC,EAAQb,GAEtDV,qBAAU,WACRR,EAAiBD,KAChB,CAACgC,EAAQb,IAMZ,OACE,uBAAMI,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRX,MAAOoB,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAUQ,EAAEC,OAAO9B,QAHtC,UAKE,wBAAQA,MAAOlB,EAAaqC,IAA5B,iBAIA,wBAAQnB,MAAOlB,EAAayC,OAA5B,oBAIA,wBAAQvB,MAAOlB,EAAa0C,UAA5B,8BAON,oBAAGb,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRE,KAAK,OACLF,UAAU,QACVoB,YAAY,YACZ/B,MAAOO,EACPqB,SAnCY,SAACI,GACnBd,EAASc,EAAMF,OAAO9B,MAAMyB,kBAoCxB,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdJ,GACC,sBAAMI,UAAU,gBAAgBsB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRrB,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAMI,EAAS,gBElEzBiB,G,MAAmB,kBAC9B,qBAAKxB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCGZ,IAAMyB,EAA6B,WACxC,MAA0C/B,qBAAWtB,GAA7CO,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAEtB,EAKID,GAAgB,GAJlBgB,EADF,EACEA,GACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,UACA6B,EAJF,EAIEA,OAGF,EAAwB3C,mBAAsB,MAA9C,mBAAO4C,EAAP,KAAaC,EAAb,KACA,EAAsC7C,oBAAS,GAA/C,mBAAO8C,EAAP,KAAoBC,EAApB,KAwBA,OAlBA5C,qBAAU,WACJwC,IACFI,GAAe,GAEfC,YAAW,YCxBV,SAAiBL,GACtB,OAAOjE,EAAO,UAHE,WAGF,OAAsBiE,EAAtB,WDwBRM,CAAQN,GACL9D,MAAK,SAACqE,GAAD,OAAoBL,EAAQK,MACjC9C,OAAM,eACNC,SAAQ,WACP0C,GAAe,QAElB,QAEJ,CAACJ,IAGJ5B,QAAQC,IAAI,aAGV,sBAAKC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEd6B,EACC,cAAC,EAAD,IAEA,sBAAK7B,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,sBACEA,UAAU,0CACV,UAAQ,eAFV,mBAKGL,KAIH,wBACEO,KAAK,SACLF,UAAU,SACV,UAAQ,cACRG,QA5CO,WACjBvB,EAAgB,YA+CV,sBAAKoB,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGJ,IAGH,oBAAGI,UAAU,QAAQ,UAAQ,aAA7B,UACGH,EACG,wBAAQG,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAGkC,KAAI,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAMQ,MAAf,gBACGR,QADH,IACGA,OADH,EACGA,EAAMS,oBEnEVC,EAAgB,WAC3B,MAII3C,qBAAWtB,GAHbI,EADF,EACEA,QACAC,EAFF,EAEEA,cACAE,EAHF,EAGEA,aAMF,OAFAmB,QAAQC,IAAI,OAGV,qCACE,qBAAKC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,sBAAKA,UAAU,QAAf,UACGxB,GAAY,cAAC,EAAD,IACb,cAAC,EAAD,CAAUC,cAAeA,cAMhCE,GACC,cAAC,EAAD,QCzCR2D,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5ecf03d9.chunk.js","sourcesContent":["// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function getData<T>(url: string): Promise<T> {\n  return fetch(BASE_URL + url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","export enum FilterParams {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getTodos } from '../../utils/todos';\n\ntype TodosContextType = {\n  todos: Todo[];\n  loading: boolean;\n  filteredTodos: Todo[];\n  setFilteredTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  selectedTodo: Todo | null;\n  setSelectedTodo: React.Dispatch<Todo | null>\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosContext = React.createContext<TodosContextType>({\n  todos: [],\n  loading: false,\n  filteredTodos: [],\n  setFilteredTodos: () => {},\n  selectedTodo: null,\n  setSelectedTodo: () => {},\n});\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .catch(() => {})\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    setFilteredTodos(todos);\n  }, [todos]);\n\n  const value = useMemo(() => ({\n    todos,\n    loading,\n    filteredTodos,\n    setFilteredTodos,\n    selectedTodo,\n    setSelectedTodo,\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }), [todos, loading, filteredTodos, selectedTodo]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { getData } from './httpClients';\n\nconst TODOS_URL = '/todos.json';\n\nexport function getTodos() {\n  return getData<Todo[]>(TODOS_URL);\n}\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../Store/Store';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { selectedTodo, setSelectedTodo } = useContext(TodosContext);\n\n  const { id, title, completed } = todo;\n\n  // eslint-disable-next-line no-console\n  console.log('TodoItem');\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn(\n        { 'has-background-info-light': selectedTodo?.id === todo?.id },\n      )}\n    >\n      <td className=\"is-vcentered\">\n        {id}\n      </td>\n\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn(\n          { 'has-text-success': completed, 'has-text-danger': !completed },\n        )}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setSelectedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={cn('far',\n              {\n                'fa-eye-slash': selectedTodo?.id === todo?.id,\n                'fa-eye': selectedTodo?.id !== todo?.id,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ninterface Props {\n  filteredTodos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ filteredTodos }) => {\n  // eslint-disable-next-line no-console\n  console.log('TodoList');\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useContext, useEffect, useState } from 'react';\nimport { FilterParams } from '../../types/filterParams';\nimport { TodosContext } from '../Store/Store';\nimport { getFilteredTodos } from '../../services/getfilteredTodos';\n\nexport const TodoFilter = () => {\n  const {\n    todos,\n    setFilteredTodos,\n  } = useContext(TodosContext);\n\n  const [title, setTitle] = useState('');\n  const [filter, setFilter] = useState(FilterParams.All);\n\n  const filteredTodos = getFilteredTodos(todos, filter, title);\n\n  useEffect(() => {\n    setFilteredTodos(filteredTodos);\n  }, [filter, title]);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.toLowerCase());\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value as FilterParams)}\n          >\n            <option value={FilterParams.All}>\n              All\n            </option>\n\n            <option value={FilterParams.Active}>\n              Active\n            </option>\n\n            <option value={FilterParams.Completed}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={title}\n          onChange={handleTitle}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {title && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setTitle('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { FilterParams } from '../types/filterParams';\n\nexport function getFilteredTodos(\n  todos: Todo[],\n  filterParams: FilterParams,\n  title?: string,\n) {\n  let filteredTodos = [...todos];\n\n  if (filterParams !== FilterParams.All) {\n    filteredTodos = filteredTodos.filter(todo => {\n      switch (filterParams) {\n        case FilterParams.Active:\n          return !todo.completed;\n\n        case FilterParams.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  }\n\n  if (title) {\n    filteredTodos = filteredTodos.filter(\n      todo => todo.title.toLowerCase().includes(title),\n    );\n  }\n\n  return filteredTodos;\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { TodosContext } from '../Store/Store';\nimport { User } from '../../types/User';\nimport { getUser } from '../../utils/users';\n\ntype Props = {};\n\nexport const TodoModal: React.FC<Props> = () => {\n  const { selectedTodo, setSelectedTodo } = useContext(TodosContext);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo || {};\n\n  const [user, setUser] = useState<User | null>(null);\n  const [loadingUser, setLoadingUser] = useState(false);\n\n  const closeModal = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    if (userId) {\n      setLoadingUser(true);\n\n      setTimeout(() => { // loading too fast\n        getUser(userId)\n          .then((userData: User) => setUser(userData))\n          .catch(() => {})\n          .finally(() => {\n            setLoadingUser(false);\n          });\n      }, 100);\n    }\n  }, [userId]);\n\n  // eslint-disable-next-line no-console\n  console.log('TodoModal');\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { User } from '../types/User';\nimport { getData } from './httpClients';\n\nconst USERS_URL = '/users/';\n\nexport function getUser(userId: number) {\n  return getData<User>(`${USERS_URL}${userId}.json`);\n}\n","/* eslint-disable max-len */\nimport React, {\n  useContext,\n  // useEffect,\n  // useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodosContext } from './components/Store/Store';\n\nexport const App: React.FC = () => {\n  const {\n    loading,\n    filteredTodos,\n    selectedTodo,\n  } = useContext(TodosContext);\n\n  // eslint-disable-next-line no-console\n  console.log('App');\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && (<Loader />)}\n              <TodoList filteredTodos={filteredTodos} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './components/Store/Store';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}